# Generated by Django 2.2.20 on 2021-04-14 12:40
from django.db import migrations, models
from datetime import date

def create_legal_sources(apps, schema_editor):
    cap = None
    gpo = None
    legacy = None
    LegalDocumentSource = apps.get_model('main', 'LegalDocumentSource')
    cap = LegalDocumentSource.objects.filter(name='CAP').first()
    if not cap:
        cap = LegalDocumentSource.objects.create(name='CAP',
                                                 date_added=date.today(),
                                                 last_updated=date.today(),
                                                 active=True,
                                                 priority=1,
                                                 search_class='CAP',
                                                 short_description='CAP provides US Case law up to 2018')
    gpo = LegalDocumentSource.objects.filter(name='GPO').first()
    if not gpo:
        gpo = LegalDocumentSource.objects.create(name='GPO',
                                                 date_added=date.today(),
                                                 last_updated=date.today(),
                                                 active=True,
                                                 priority=2,
                                                 search_class='GPO',
                                                 short_description='The GPO provides access to the USCode')
    legacy = LegalDocumentSource.objects.filter(name='Legacy Documents').first()
    if not legacy:
        legacy = LegalDocumentSource.objects.create(name='Legacy',
                                                    date_added=date.today(),
                                                    last_updated=date.today(),
                                                    active=False,
                                                    priority=10,
                                                    search_class='LegacyDocument',
                                                    short_description='Legacy Documents were manually entered into H2O as Cases without a CAP ID.')

def recreate_search_index(apps, schema_editor):
    from main.models import SearchIndex
    SearchIndex.create_search_index()

class Migration(migrations.Migration):

    dependencies = [
        ('main', '0004_auto_20210405_1927'),
    ]

    operations = [
        migrations.RunSQL("DROP MATERIALIZED VIEW IF EXISTS internal_search_view;"),
        migrations.AlterField(
            model_name='historicallegaldocument',
            name='short_name',
            field=models.CharField(blank=True, max_length=150, null=True),
        ),
        migrations.AlterField(
            model_name='legaldocument',
            name='short_name',
            field=models.CharField(blank=True, max_length=150, null=True),
        ),
        migrations.AlterModelOptions(
            name='legaldocumentsource',
            options={'ordering': ['priority']},
        ),
        migrations.AddField(
            model_name='legaldocumentsource',
            name='search_class',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='legaldocumentsource',
            name='short_description',
            field=models.CharField(blank=True, max_length=140, null=True),
        ),
        migrations.RunPython(create_legal_sources),
        migrations.RunPython(recreate_search_index)
    ]
