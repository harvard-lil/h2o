# Generated by Django 2.2.16 on 2020-10-15 12:35

from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
import django.contrib.postgres.indexes
import django.contrib.postgres.operations
import django.core.validators
from django.db import migrations, models
import django.db.migrations.operations.special
import django.db.models.deletion
import main.models
import re
import simple_history.models


class Migration(migrations.Migration):

    replaces = [('main', '0001_initial'), ('main', '0002_auto_20191007_1639'), ('main', '0003_auto_20191029_2015'), ('main', '0004_auto_20191118_1447'), ('main', '0005_auto_20191120_1611'), ('main', '0006_auto_20191122_2208'), ('main', '0007_auto_20191205_1629'), ('main', '0008_auto_20191211_1600'), ('main', '0009_user_password'), ('main', '0010_auto_20191219_1621'), ('main', '0011_auto_20191219_1715'), ('main', '0012_auto_20191219_1629'), ('main', '0013_auto_20191219_1644'), ('main', '0014_remove_default_created_via_import'), ('main', '0015_auto_20191219_1717'), ('main', '0016_auto_20191219_1734'), ('main', '0017_auto_20191219_1744'), ('main', '0018_auto_20191219_1811'), ('main', '0019_auto_20191219_1823'), ('main', '0020_auto_20191219_1940'), ('main', '0021_auto_20191219_1953'), ('main', '0022_auto_20191219_2002'), ('main', '0023_auto_20191219_2009'), ('main', '0024_remove_user_title'), ('main', '0025_auto_20200107_1858'), ('main', '0026_auto_20200107_2023'), ('main', '0027_auto_20200107_2050'), ('main', '0028_auto_20200108_1514'), ('main', '0029_auto_20200108_1604'), ('main', '0030_auto_20200108_1606'), ('main', '0031_auto_20200108_1740'), ('main', '0032_remove_contentnode_cloneable'), ('main', '0033_auto_20200108_2000'), ('main', '0034_auto_20200108_2017'), ('main', '0035_auto_20200113_2106'), ('main', '0036_contentnode_provenance'), ('main', '0037_contentcollaborator_can_edit'), ('main', '0038_auto_20200212_1617'), ('main', '0039_auto_20200303_1528'), ('main', '0040_drop_casecourt_table'), ('main', '0041_auto_20200309_1443'), ('main', '0042_historicalcase'), ('main', '0043_auto_20200312_1955'), ('main', '0044_auto_20200312_2036'), ('main', '0045_contentnode_new_casebook'), ('main', '0046_auto_20200312_2042'), ('main', '0047_auto_20200316_1727'), ('main', '0048_casebook_provenance'), ('main', '0049_deref_old_casebooks'), ('main', '0050_historical_contents'), ('main', '0051_auto_20200407_1714'), ('main', '0052_migrate_casebook_dates'), ('main', '0053_auto_20200420_2048'), ('main', '0054_auto_20200515_1243'), ('main', '0055_auto_20200730_2232'), ('main', '0056_auto_20200804_1631'), ('main', '0057_auto_20200804_1647'), ('main', '0058_auto_20200809_1358'), ('main', '0059_auto_20200809_2018'), ('main', '0060_auto_20200809_2151'), ('main', '0061_auto_20200810_1337'), ('main', '0062_auto_20200811_2000'), ('main', '0063_auto_20200824_1243'), ('main', '0064_auto_20200824_1432'), ('main', '0065_auto_20200824_1433'), ('main', '0066_auto_20200824_1702'), ('main', '0067_auto_20200825_1346'), ('main', '0068_auto_20200825_1410'), ('main', '0069_auto_20201013_1237'), ('main', '0070_auto_20201013_1259'), ('main', '0071_auto_20201013_1900'), ('main', '0072_auto_20201015_1225')]

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        django.contrib.postgres.operations.BtreeGinExtension(
        ),
        migrations.CreateModel(
            name='Annotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collage_id', models.IntegerField(blank=True, null=True)),
                ('annotation', models.CharField(blank=True, max_length=10240, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('cloned', models.BooleanField(default=False)),
                ('xpath_start', models.CharField(blank=True, max_length=255, null=True)),
                ('xpath_end', models.CharField(blank=True, max_length=255, null=True)),
                ('start_offset', models.IntegerField(default=0)),
                ('end_offset', models.IntegerField(default=0)),
                ('link', models.CharField(blank=True, max_length=255, null=True)),
                ('hidden', models.BooleanField(default=False)),
                ('highlight_only', models.CharField(blank=True, max_length=255, null=True)),
                ('annotated_item_id', models.IntegerField(default=0)),
                ('annotated_item_type', models.CharField(default='Collage', max_length=255)),
                ('error', models.BooleanField(default=False)),
                ('feedback', models.BooleanField(default=False)),
                ('discussion', models.BooleanField(default=False)),
                ('user_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'annotations',
            },
        ),
        migrations.CreateModel(
            name='ArInternalMetadata',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('key', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'ar_internal_metadata',
            },
        ),
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name_abbreviation', models.CharField(max_length=150)),
                ('name', models.CharField(blank=True, max_length=10000, null=True)),
                ('decision_date', models.DateField(blank=True, null=True)),
                ('public', models.BooleanField(blank=True, default=False, null=True)),
                ('created_via_import', models.BooleanField(default=False)),
                ('capapi_id', models.IntegerField(blank=True, null=True)),
                ('attorneys', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('parties', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('opinions', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('citations', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('docket_number', models.CharField(blank=True, max_length=20000, null=True)),
                ('header_html', models.CharField(blank=True, max_length=15360, null=True)),
                ('content', models.CharField(max_length=5242880)),
                ('annotations_count', models.IntegerField(blank=True, default=0, null=True)),
            ],
            options={
                'db_table': 'cases',
            },
        ),
        migrations.CreateModel(
            name='CaseCourt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name_abbreviation', models.CharField(blank=True, max_length=150, null=True)),
                ('name', models.CharField(blank=True, max_length=500, null=True)),
                ('capapi_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'case_courts',
            },
        ),
        migrations.CreateModel(
            name='CkeditorAsset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_file_name', models.CharField(max_length=255)),
                ('data_content_type', models.CharField(blank=True, max_length=255, null=True)),
                ('data_file_size', models.IntegerField(blank=True, null=True)),
                ('assetable_id', models.IntegerField(blank=True, null=True)),
                ('assetable_type', models.CharField(blank=True, max_length=30, null=True)),
                ('type', models.CharField(blank=True, max_length=30, null=True)),
                ('width', models.IntegerField(blank=True, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ckeditor_assets',
            },
        ),
        migrations.CreateModel(
            name='Collage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annotatable_type', models.CharField(blank=True, max_length=255, null=True)),
                ('annotatable_id', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=250)),
                ('description', models.CharField(blank=True, max_length=5120, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('word_count', models.IntegerField(blank=True, null=True)),
                ('ancestry', models.CharField(blank=True, max_length=255, null=True)),
                ('public', models.BooleanField(blank=True, default=True, null=True)),
                ('readable_state', models.CharField(blank=True, max_length=5242880, null=True)),
                ('words_shown', models.IntegerField(blank=True, null=True)),
                ('user_id', models.IntegerField(default=0)),
                ('annotator_version', models.IntegerField(default=2)),
                ('featured', models.BooleanField(default=False)),
                ('created_via_import', models.BooleanField(default=False)),
                ('version', models.IntegerField(default=1)),
                ('enable_feedback', models.BooleanField(default=True)),
                ('enable_discussions', models.BooleanField(default=False)),
                ('enable_responses', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'collages',
            },
        ),
        migrations.CreateModel(
            name='ContentAnnotation',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('start_paragraph', models.IntegerField()),
                ('end_paragraph', models.IntegerField(blank=True, null=True)),
                ('start_offset', models.IntegerField()),
                ('end_offset', models.IntegerField()),
                ('kind', models.CharField(max_length=255)),
                ('content', models.TextField(blank=True, null=True)),
                ('global_start_offset', models.IntegerField(blank=True, null=True)),
                ('global_end_offset', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_annotations',
            },
        ),
        migrations.CreateModel(
            name='ContentCollaborator',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('has_attribution', models.BooleanField(default=False)),
                ('role', models.CharField(blank=True, choices=[('owner', 'owner'), ('editor', 'editor')], max_length=255, null=True)),
            ],
            options={
                'db_table': 'content_collaborators',
            },
        ),
        migrations.CreateModel(
            name='ContentImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('page_id', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('image_file_name', models.CharField(blank=True, max_length=255, null=True)),
                ('image_content_type', models.CharField(blank=True, max_length=255, null=True)),
                ('image_file_size', models.IntegerField(blank=True, null=True)),
                ('image_updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_images',
            },
        ),
        migrations.CreateModel(
            name='ContentNode',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, max_length=10000, null=True)),
                ('slug', models.CharField(blank=True, max_length=10000, null=True)),
                ('subtitle', models.CharField(blank=True, max_length=10000, null=True)),
                ('public', models.BooleanField(default=False)),
                ('cloneable', models.BooleanField(default=True)),
                ('draft_mode_of_published_casebook', models.BooleanField(blank=True, help_text='Unknown (None) or True; never False', null=True)),
                ('ancestry', models.CharField(blank=True, help_text='List of parent IDs in tree, separated by slashes.', max_length=255, null=True)),
                ('ordinals', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('headnote', models.TextField(blank=True, null=True)),
                ('raw_headnote', models.TextField(blank=True, null=True)),
                ('resource_type', models.CharField(blank=True, max_length=255, null=True)),
                ('resource_id', models.BigIntegerField(blank=True, null=True)),
                ('is_alias', models.BooleanField(blank=True, null=True)),
                ('playlist_id', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_nodes',
            },
        ),
        migrations.CreateModel(
            name='Default',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(blank=True, max_length=1024, null=True)),
                ('description', models.CharField(blank=True, max_length=5242880, null=True)),
                ('url', models.CharField(max_length=1024)),
                ('public', models.BooleanField(default=True, null=True)),
                ('content_type', models.CharField(blank=True, max_length=255, null=True)),
                ('ancestry', models.CharField(blank=True, max_length=255, null=True)),
                ('created_via_import', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'defaults',
            },
        ),
        migrations.CreateModel(
            name='DelayedJob',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.IntegerField(blank=True, default=0, null=True)),
                ('attempts', models.IntegerField(blank=True, default=0, null=True)),
                ('handler', models.TextField(blank=True, null=True)),
                ('last_error', models.TextField(blank=True, null=True)),
                ('run_at', models.DateTimeField(blank=True, null=True)),
                ('locked_at', models.DateTimeField(blank=True, null=True)),
                ('failed_at', models.DateTimeField(blank=True, null=True)),
                ('locked_by', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('queue', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'delayed_jobs',
            },
        ),
        migrations.CreateModel(
            name='FrozenItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(blank=True, null=True)),
                ('version', models.IntegerField()),
                ('item_id', models.IntegerField()),
                ('item_type', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'frozen_items',
            },
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('media_type_id', models.IntegerField(blank=True, null=True)),
                ('public', models.BooleanField(blank=True, default=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=5242880, null=True)),
                ('user_id', models.IntegerField(default=0)),
                ('created_via_import', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'medias',
            },
        ),
        migrations.CreateModel(
            name='MediaType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(blank=True, max_length=255, null=True)),
                ('slug', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'media_types',
            },
        ),
        migrations.CreateModel(
            name='Metadata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contributor', models.CharField(blank=True, max_length=255, null=True)),
                ('coverage', models.CharField(blank=True, max_length=255, null=True)),
                ('creator', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=5242880, null=True)),
                ('format', models.CharField(blank=True, max_length=255, null=True)),
                ('identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('language', models.CharField(blank=True, default='en', max_length=255, null=True)),
                ('publisher', models.CharField(blank=True, max_length=255, null=True)),
                ('relation', models.CharField(blank=True, max_length=255, null=True)),
                ('rights', models.CharField(blank=True, max_length=255, null=True)),
                ('source', models.CharField(blank=True, max_length=255, null=True)),
                ('subject', models.CharField(blank=True, max_length=255, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('dc_type', models.CharField(blank=True, default='Text', max_length=255, null=True)),
                ('classifiable_type', models.CharField(blank=True, max_length=255, null=True)),
                ('classifiable_id', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'metadata',
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_title', models.CharField(max_length=255)),
                ('slug', models.CharField(max_length=255)),
                ('content', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('footer_link', models.BooleanField(default=False)),
                ('footer_link_text', models.CharField(blank=True, max_length=255, null=True)),
                ('footer_sort', models.IntegerField(default=1000)),
                ('is_user_guide', models.BooleanField(default=False)),
                ('user_guide_sort', models.IntegerField(default=1000)),
                ('user_guide_link_text', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'pages',
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(blank=True, max_length=255, null=True)),
                ('label', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('permission_type', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'permissions',
            },
        ),
        migrations.CreateModel(
            name='PermissionAssignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_collection_id', models.IntegerField(blank=True, null=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('permission_id', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'permission_assignments',
            },
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=1024, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('public', models.BooleanField(blank=True, default=True, null=True)),
                ('ancestry', models.CharField(blank=True, max_length=255, null=True)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('counter_start', models.IntegerField(default=1)),
                ('location_id', models.IntegerField(blank=True, null=True)),
                ('when_taught', models.CharField(blank=True, max_length=255, null=True)),
                ('user_id', models.IntegerField(default=0)),
                ('primary', models.BooleanField(default=False)),
                ('featured', models.BooleanField(default=False)),
                ('created_via_import', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'playlists',
            },
        ),
        migrations.CreateModel(
            name='PlaylistItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('playlist_id', models.IntegerField(blank=True, null=True)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('public_notes', models.BooleanField(default=True)),
                ('actual_object_type', models.CharField(blank=True, max_length=255, null=True)),
                ('actual_object_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'playlist_items',
            },
        ),
        migrations.CreateModel(
            name='PlaylistsUserCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('playlist_id', models.IntegerField(blank=True, null=True)),
                ('user_collection_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'playlists_user_collections',
            },
        ),
        migrations.CreateModel(
            name='RawContent',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('source_type', models.CharField(blank=True, max_length=50, null=True)),
                ('source_id', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'raw_contents',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(blank=True, max_length=40, null=True)),
                ('authorizable_type', models.CharField(blank=True, max_length=40, null=True)),
                ('authorizable_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'roles',
            },
        ),
        migrations.CreateModel(
            name='RolesUser',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'db_table': 'roles_users',
            },
        ),
        migrations.CreateModel(
            name='SchemaMigration',
            fields=[
                ('version', models.CharField(max_length=255, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'schema_migrations',
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('session_id', models.CharField(max_length=255)),
                ('data', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sessions',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('taggings_count', models.IntegerField(blank=True, default=0, null=True)),
            ],
            options={
                'db_table': 'tags',
            },
        ),
        migrations.CreateModel(
            name='Tagging',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_id', models.IntegerField(blank=True, null=True)),
                ('taggable_id', models.IntegerField(blank=True, null=True)),
                ('tagger_id', models.IntegerField(blank=True, null=True)),
                ('tagger_type', models.CharField(blank=True, max_length=255, null=True)),
                ('taggable_type', models.CharField(blank=True, max_length=255, null=True)),
                ('context', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'taggings',
            },
        ),
        migrations.CreateModel(
            name='UserCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_collections',
            },
        ),
        migrations.CreateModel(
            name='UserCollectionsUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('user_collection_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_collections_users',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('login', models.CharField(blank=True, max_length=255, null=True)),
                ('email_address', models.CharField(blank=True, max_length=255, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('attribution', models.CharField(default='Anonymous', max_length=255)),
                ('affiliation', models.CharField(blank=True, max_length=255, null=True)),
                ('verified_email', models.BooleanField(default=False)),
                ('verified_professor', models.BooleanField(default=False)),
                ('professor_verification_requested', models.BooleanField(default=False)),
                ('login_count', models.IntegerField(default=0)),
                ('last_request_at', models.DateTimeField(blank=True, null=True)),
                ('last_login_at', models.DateTimeField(blank=True, null=True)),
                ('current_login_at', models.DateTimeField(blank=True, null=True)),
                ('last_login_ip', models.CharField(blank=True, max_length=255, null=True)),
                ('current_login_ip', models.CharField(blank=True, max_length=255, null=True)),
                ('crypted_password', models.CharField(blank=True, max_length=255, null=True)),
                ('password_salt', models.CharField(blank=True, max_length=255, null=True)),
                ('persistence_token', models.CharField(max_length=255)),
                ('oauth_token', models.CharField(blank=True, max_length=255, null=True)),
                ('oauth_secret', models.CharField(blank=True, max_length=255, null=True)),
                ('perishable_token', models.CharField(blank=True, max_length=255, null=True)),
                ('tz_name', models.CharField(blank=True, max_length=255, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('canvas_id', models.CharField(blank=True, max_length=255, null=True)),
                ('default_font', models.CharField(blank=True, default='futura', max_length=255, null=True)),
                ('default_font_size', models.CharField(blank=True, default=10, max_length=255, null=True)),
                ('print_titles', models.BooleanField(default=True)),
                ('print_dates_details', models.BooleanField(default=True)),
                ('print_paragraph_numbers', models.BooleanField(default=True)),
                ('print_annotations', models.BooleanField(default=False)),
                ('print_highlights', models.CharField(default='original', max_length=255)),
                ('print_font_face', models.CharField(default='dagny', max_length=255)),
                ('print_font_size', models.CharField(default='small', max_length=255)),
                ('default_show_comments', models.BooleanField(default=False)),
                ('default_show_paragraph_numbers', models.BooleanField(default=True)),
                ('hidden_text_display', models.BooleanField(default=False)),
                ('print_links', models.BooleanField(default=True)),
                ('toc_levels', models.CharField(default='', max_length=255)),
                ('print_export_format', models.CharField(default='', max_length=255)),
                ('image_file_name', models.CharField(blank=True, max_length=255, null=True)),
                ('image_content_type', models.CharField(blank=True, max_length=255, null=True)),
                ('image_file_size', models.IntegerField(blank=True, null=True)),
                ('image_updated_at', models.DateTimeField(blank=True, null=True)),
                ('roles', models.ManyToManyField(through='main.RolesUser', to='main.Role')),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='UnpublishedRevision',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('field', models.CharField(max_length=255)),
                ('value', models.CharField(blank=True, max_length=50000, null=True)),
                ('annotation', models.ForeignKey(blank=True, db_constraint=False, db_index=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.ContentAnnotation')),
                ('node', models.ForeignKey(blank=True, db_constraint=False, db_index=False, help_text='Node in the draft.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='revisions', to='main.ContentNode')),
                ('node_parent', models.ForeignKey(blank=True, db_constraint=False, db_index=False, help_text='Corresponding node in the original, published casebook.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='draft_revisions', to='main.ContentNode')),
            ],
            options={
                'db_table': 'unpublished_revisions',
            },
        ),
        migrations.CreateModel(
            name='TextBlock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=5242880, null=True)),
                ('content', models.CharField(max_length=5242880)),
                ('version', models.IntegerField(default=1)),
                ('public', models.BooleanField(blank=True, default=True, null=True)),
                ('created_via_import', models.BooleanField(default=False)),
                ('annotations_count', models.IntegerField(blank=True, default=0, null=True)),
                ('enable_feedback', models.BooleanField(default=True)),
                ('enable_discussions', models.BooleanField(default=False)),
                ('enable_responses', models.BooleanField(default=False)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, db_index=False, default=0, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'text_blocks',
            },
        ),
        migrations.AddIndex(
            model_name='tagging',
            index=models.Index(fields=['context'], name='taggings_context_12c269_idx'),
        ),
        migrations.AddIndex(
            model_name='tagging',
            index=models.Index(fields=['tag_id'], name='taggings_tag_id_8569d0_idx'),
        ),
        migrations.AddIndex(
            model_name='tagging',
            index=models.Index(fields=['taggable_id', 'taggable_type', 'context'], name='taggings_taggabl_559cf2_idx'),
        ),
        migrations.AddIndex(
            model_name='tagging',
            index=models.Index(fields=['taggable_id', 'taggable_type', 'tagger_id', 'context'], name='taggings_taggabl_fc4c3b_idx'),
        ),
        migrations.AddIndex(
            model_name='tagging',
            index=models.Index(fields=['taggable_id'], name='taggings_taggabl_78f0d4_idx'),
        ),
        migrations.AddIndex(
            model_name='tagging',
            index=models.Index(fields=['taggable_type'], name='taggings_taggabl_7d4711_idx'),
        ),
        migrations.AddIndex(
            model_name='tagging',
            index=models.Index(fields=['tagger_id', 'tagger_type'], name='taggings_tagger__6a7018_idx'),
        ),
        migrations.AddIndex(
            model_name='tagging',
            index=models.Index(fields=['tagger_id'], name='taggings_tagger__45521d_idx'),
        ),
        migrations.AddIndex(
            model_name='tagging',
            index=models.Index(fields=['tagger_type'], name='taggings_tagger__62eac1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='tagging',
            unique_together={('tag_id', 'taggable_id', 'taggable_type', 'context', 'tagger_id', 'tagger_type')},
        ),
        migrations.AddIndex(
            model_name='tag',
            index=models.Index(fields=['taggings_count'], name='tags_tagging_a73a28_idx'),
        ),
        migrations.AddIndex(
            model_name='session',
            index=models.Index(fields=['session_id'], name='sessions_session_0947d2_idx'),
        ),
        migrations.AddIndex(
            model_name='session',
            index=models.Index(fields=['updated_at'], name='sessions_updated_fe65fc_idx'),
        ),
        migrations.AddField(
            model_name='rolesuser',
            name='role',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.Role'),
        ),
        migrations.AddField(
            model_name='rolesuser',
            name='user',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='role',
            index=models.Index(fields=['name'], name='roles_name_a96913_idx'),
        ),
        migrations.AddIndex(
            model_name='role',
            index=models.Index(fields=['authorizable_type'], name='roles_authori_fd60c5_idx'),
        ),
        migrations.AddIndex(
            model_name='role',
            index=models.Index(fields=['authorizable_id'], name='roles_authori_12a7ac_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='rawcontent',
            unique_together={('source_type', 'source_id')},
        ),
        migrations.AddIndex(
            model_name='playlistitem',
            index=models.Index(fields=['position'], name='playlist_it_positio_eba8b9_idx'),
        ),
        migrations.AddIndex(
            model_name='playlist',
            index=models.Index(fields=['ancestry'], name='playlists_ancestr_114318_idx'),
        ),
        migrations.AddIndex(
            model_name='playlist',
            index=models.Index(fields=['position'], name='playlists_positio_80e9d5_idx'),
        ),
        migrations.AddIndex(
            model_name='metadata',
            index=models.Index(fields=['classifiable_id'], name='metadata_classif_a538ae_idx'),
        ),
        migrations.AddIndex(
            model_name='metadata',
            index=models.Index(fields=['classifiable_type'], name='metadata_classif_99dd7b_idx'),
        ),
        migrations.AddIndex(
            model_name='delayedjob',
            index=models.Index(fields=['priority', 'run_at'], name='delayed_job_priorit_1580e2_idx'),
        ),
        migrations.AddField(
            model_name='default',
            name='user',
            field=models.ForeignKey(blank=True, db_constraint=False, db_index=False, default=0, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='defaults', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contentnode',
            name='collaborators',
            field=models.ManyToManyField(related_name='casebooks', through='main.ContentCollaborator', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contentnode',
            name='copy_of',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clones', to='main.ContentNode'),
        ),
        migrations.AddField(
            model_name='contentnode',
            name='root_user',
            field=models.ForeignKey(blank=True, db_constraint=False, db_index=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='casebooks_and_clones', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contentcollaborator',
            name='content',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.ContentNode'),
        ),
        migrations.AddField(
            model_name='contentcollaborator',
            name='user',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contentannotation',
            name='resource',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='annotations', to='main.ContentNode'),
        ),
        migrations.AddIndex(
            model_name='collage',
            index=models.Index(fields=['ancestry'], name='collages_ancestr_7d1954_idx'),
        ),
        migrations.AddIndex(
            model_name='collage',
            index=models.Index(fields=['annotatable_id'], name='collages_annotat_751c5a_idx'),
        ),
        migrations.AddIndex(
            model_name='collage',
            index=models.Index(fields=['annotatable_type'], name='collages_annotat_ede5c2_idx'),
        ),
        migrations.AddIndex(
            model_name='collage',
            index=models.Index(fields=['created_at'], name='collages_created_fa53c6_idx'),
        ),
        migrations.AddIndex(
            model_name='collage',
            index=models.Index(fields=['name'], name='collages_name_ace9ed_idx'),
        ),
        migrations.AddIndex(
            model_name='collage',
            index=models.Index(fields=['public'], name='collages_public_e33d92_idx'),
        ),
        migrations.AddIndex(
            model_name='collage',
            index=models.Index(fields=['updated_at'], name='collages_updated_325c5f_idx'),
        ),
        migrations.AddIndex(
            model_name='collage',
            index=models.Index(fields=['word_count'], name='collages_word_co_4a3bfd_idx'),
        ),
        migrations.AddIndex(
            model_name='ckeditorasset',
            index=models.Index(fields=['assetable_type', 'assetable_id'], name='ckeditor_as_assetab_e9c565_idx'),
        ),
        migrations.AddIndex(
            model_name='ckeditorasset',
            index=models.Index(fields=['assetable_type', 'type', 'assetable_id'], name='ckeditor_as_assetab_cd8a5f_idx'),
        ),
        migrations.AddIndex(
            model_name='casecourt',
            index=models.Index(fields=['name'], name='case_courts_name_8b0202_idx'),
        ),
        migrations.AddIndex(
            model_name='casecourt',
            index=models.Index(fields=['name_abbreviation'], name='case_courts_name_ab_48fee9_idx'),
        ),
        migrations.AddField(
            model_name='case',
            name='case_court',
            field=models.ForeignKey(blank=True, db_constraint=False, db_index=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='cases', to='main.CaseCourt'),
        ),
        migrations.CreateModel(
            name='Casebook',
            fields=[
            ],
            options={
                'proxy': True,
                'constraints': [],
                'indexes': [],
            },
            bases=('main.contentnode',),
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
            ],
            options={
                'proxy': True,
                'constraints': [],
                'indexes': [],
            },
            bases=('main.contentnode',),
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
            ],
            options={
                'proxy': True,
                'constraints': [],
                'indexes': [],
            },
            bases=('main.contentnode',),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['affiliation'], name='users_affilia_021728_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['attribution'], name='users_attribu_e12b66_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email_address'], name='users_email_a_f58eef_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['id'], name='users_id_6a15a7_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['last_request_at'], name='users_last_re_e753cf_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['login'], name='users_login_eda8f4_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['oauth_token'], name='users_oauth_t_1a9921_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['persistence_token'], name='users_persist_f5cd85_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['tz_name'], name='users_tz_name_4599bd_idx'),
        ),
        migrations.AddField(
            model_name='unpublishedrevision',
            name='casebook',
            field=models.ForeignKey(blank=True, db_constraint=False, db_index=False, help_text='The draft casebook.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='casebook_revisions', to='main.Casebook'),
        ),
        migrations.AddIndex(
            model_name='textblock',
            index=models.Index(fields=['created_at'], name='text_blocks_created_d06320_idx'),
        ),
        migrations.AddIndex(
            model_name='textblock',
            index=models.Index(fields=['name'], name='text_blocks_name_ce27bd_idx'),
        ),
        migrations.AddIndex(
            model_name='textblock',
            index=models.Index(fields=['updated_at'], name='text_blocks_updated_9ac1a4_idx'),
        ),
        migrations.AddField(
            model_name='contentnode',
            name='casebook',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contents', to='main.Casebook'),
        ),
        migrations.AlterUniqueTogether(
            name='contentcollaborator',
            unique_together={('user', 'content')},
        ),
        migrations.AddIndex(
            model_name='contentannotation',
            index=models.Index(fields=['resource', 'start_paragraph'], name='content_ann_resourc_a9fa0e_idx'),
        ),
        migrations.AddIndex(
            model_name='case',
            index=models.Index(fields=['case_court'], name='cases_case_co_b58acb_idx'),
        ),
        migrations.AddIndex(
            model_name='case',
            index=django.contrib.postgres.indexes.GinIndex(fields=['citations'], name='cases_citatio_b60de2_gin'),
        ),
        migrations.AddIndex(
            model_name='case',
            index=models.Index(fields=['created_at'], name='cases_created_6583ad_idx'),
        ),
        migrations.AddIndex(
            model_name='case',
            index=models.Index(fields=['decision_date'], name='cases_decisio_c6e645_idx'),
        ),
        migrations.AddIndex(
            model_name='case',
            index=models.Index(fields=['name_abbreviation'], name='cases_name_ab_2ffab3_idx'),
        ),
        migrations.AddIndex(
            model_name='case',
            index=models.Index(fields=['public'], name='cases_public_2d5cec_idx'),
        ),
        migrations.AddIndex(
            model_name='case',
            index=models.Index(fields=['updated_at'], name='cases_updated_395104_idx'),
        ),
        migrations.AddIndex(
            model_name='unpublishedrevision',
            index=models.Index(fields=['node', 'field'], name='unpublished_node_id_a9ebe9_idx'),
        ),
        migrations.AddIndex(
            model_name='contentnode',
            index=models.Index(fields=['ancestry'], name='content_nod_ancestr_752d0e_idx'),
        ),
        migrations.AddIndex(
            model_name='contentnode',
            index=models.Index(fields=['casebook', 'ordinals'], name='content_nod_caseboo_fd87f1_idx'),
        ),
        migrations.AddIndex(
            model_name='contentnode',
            index=models.Index(fields=['resource_type', 'resource_id'], name='content_nod_resourc_12667a_idx'),
        ),
        migrations.AlterField(
            model_name='user',
            name='email_address',
            field=models.CharField(blank=True, max_length=255, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='default',
            name='url',
            field=models.URLField(max_length=1024),
        ),
        migrations.AlterModelOptions(
            name='contentannotation',
            options={'ordering': ['global_start_offset', 'id']},
        ),
        migrations.AlterModelOptions(
            name='contentnode',
            options={'ordering': ['ordinals']},
        ),
        migrations.AlterField(
            model_name='contentannotation',
            name='kind',
            field=models.CharField(choices=[('replace', 'replace'), ('highlight', 'highlight'), ('elide', 'elide'), ('note', 'note'), ('link', 'link')], max_length=255),
        ),
        migrations.AlterField(
            model_name='contentannotation',
            name='end_offset',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='contentannotation',
            name='start_offset',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='contentannotation',
            name='start_paragraph',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='contentannotation',
            name='resource',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='annotations', to='main.Resource'),
        ),
        migrations.AlterField(
            model_name='contentcollaborator',
            name='content',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.ContentNode'),
        ),
        migrations.AlterField(
            model_name='contentnode',
            name='casebook',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='contents', to='main.Casebook'),
        ),
        migrations.AlterField(
            model_name='unpublishedrevision',
            name='annotation',
            field=models.ForeignKey(blank=True, db_constraint=False, db_index=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.ContentAnnotation'),
        ),
        migrations.AlterField(
            model_name='unpublishedrevision',
            name='casebook',
            field=models.ForeignKey(blank=True, db_constraint=False, db_index=False, help_text='The draft casebook.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='casebook_revisions', to='main.Casebook'),
        ),
        migrations.AlterField(
            model_name='unpublishedrevision',
            name='node',
            field=models.ForeignKey(blank=True, db_constraint=False, db_index=False, help_text='Node in the draft.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='revisions', to='main.ContentNode'),
        ),
        migrations.AlterField(
            model_name='unpublishedrevision',
            name='node_parent',
            field=models.ForeignKey(blank=True, db_constraint=False, db_index=False, help_text='Corresponding node in the original, published casebook.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='draft_revisions', to='main.ContentNode'),
        ),
        migrations.AlterField(
            model_name='user',
            name='attribution',
            field=models.CharField(default='Anonymous', max_length=255, verbose_name='Display name'),
        ),
        migrations.AlterField(
            model_name='user',
            name='current_login_at',
            field=models.DateTimeField(blank=True, help_text='Time of most recent password login', null=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='current_login_ip',
            field=models.CharField(blank=True, help_text='IP of most recent password login', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='last_login_at',
            field=models.DateTimeField(blank=True, help_text='Time of previous password login', null=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='last_login_ip',
            field=models.CharField(blank=True, help_text='IP of previous password login', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='last_request_at',
            field=models.DateTimeField(blank=True, help_text='Time of last request from user (to nearest 10 minutes)', null=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='login_count',
            field=models.IntegerField(default=0, help_text='Number of explicit password logins by user'),
        ),
        migrations.AddField(
            model_name='user',
            name='password',
            field=models.CharField(default='UNSET', max_length=128, verbose_name='password'),
            preserve_default=False,
        ),
        migrations.RemoveField(
            model_name='user',
            name='crypted_password',
        ),
        migrations.RemoveField(
            model_name='user',
            name='password_salt',
        ),
        migrations.DeleteModel(
            name='Annotation',
        ),
        migrations.DeleteModel(
            name='ArInternalMetadata',
        ),
        migrations.DeleteModel(
            name='Collage',
        ),
        migrations.DeleteModel(
            name='DelayedJob',
        ),
        migrations.DeleteModel(
            name='FrozenItem',
        ),
        migrations.DeleteModel(
            name='Metadata',
        ),
        migrations.DeleteModel(
            name='Page',
        ),
        migrations.DeleteModel(
            name='Permission',
        ),
        migrations.DeleteModel(
            name='PermissionAssignment',
        ),
        migrations.DeleteModel(
            name='Playlist',
        ),
        migrations.DeleteModel(
            name='PlaylistItem',
        ),
        migrations.DeleteModel(
            name='PlaylistsUserCollection',
        ),
        migrations.DeleteModel(
            name='SchemaMigration',
        ),
        migrations.DeleteModel(
            name='Session',
        ),
        migrations.DeleteModel(
            name='Tag',
        ),
        migrations.DeleteModel(
            name='Tagging',
        ),
        migrations.RemoveField(
            model_name='unpublishedrevision',
            name='annotation',
        ),
        migrations.RemoveField(
            model_name='unpublishedrevision',
            name='casebook',
        ),
        migrations.RemoveField(
            model_name='unpublishedrevision',
            name='node',
        ),
        migrations.RemoveField(
            model_name='unpublishedrevision',
            name='node_parent',
        ),
        migrations.DeleteModel(
            name='UserCollection',
        ),
        migrations.DeleteModel(
            name='UserCollectionsUser',
        ),
        migrations.DeleteModel(
            name='UnpublishedRevision',
        ),
        migrations.RemoveIndex(
            model_name='user',
            name='users_login_eda8f4_idx',
        ),
        migrations.RemoveIndex(
            model_name='user',
            name='users_oauth_t_1a9921_idx',
        ),
        migrations.RemoveIndex(
            model_name='user',
            name='users_persist_f5cd85_idx',
        ),
        migrations.RemoveIndex(
            model_name='user',
            name='users_tz_name_4599bd_idx',
        ),
        migrations.RemoveField(
            model_name='case',
            name='annotations_count',
        ),
        migrations.RemoveField(
            model_name='contentnode',
            name='is_alias',
        ),
        migrations.RemoveField(
            model_name='contentnode',
            name='slug',
        ),
        migrations.RemoveField(
            model_name='textblock',
            name='annotations_count',
        ),
        migrations.RemoveField(
            model_name='textblock',
            name='enable_discussions',
        ),
        migrations.RemoveField(
            model_name='textblock',
            name='enable_feedback',
        ),
        migrations.RemoveField(
            model_name='textblock',
            name='enable_responses',
        ),
        migrations.RemoveField(
            model_name='textblock',
            name='version',
        ),
        migrations.RemoveField(
            model_name='user',
            name='canvas_id',
        ),
        migrations.RemoveField(
            model_name='user',
            name='default_font',
        ),
        migrations.RemoveField(
            model_name='user',
            name='default_font_size',
        ),
        migrations.RemoveField(
            model_name='user',
            name='default_show_comments',
        ),
        migrations.RemoveField(
            model_name='user',
            name='default_show_paragraph_numbers',
        ),
        migrations.RemoveField(
            model_name='user',
            name='description',
        ),
        migrations.RemoveField(
            model_name='user',
            name='hidden_text_display',
        ),
        migrations.RemoveField(
            model_name='user',
            name='image_content_type',
        ),
        migrations.RemoveField(
            model_name='user',
            name='image_file_name',
        ),
        migrations.RemoveField(
            model_name='user',
            name='image_file_size',
        ),
        migrations.RemoveField(
            model_name='user',
            name='image_updated_at',
        ),
        migrations.RemoveField(
            model_name='user',
            name='login',
        ),
        migrations.RemoveField(
            model_name='user',
            name='oauth_secret',
        ),
        migrations.RemoveField(
            model_name='user',
            name='oauth_token',
        ),
        migrations.RemoveField(
            model_name='user',
            name='perishable_token',
        ),
        migrations.RemoveField(
            model_name='user',
            name='persistence_token',
        ),
        migrations.RemoveField(
            model_name='user',
            name='print_annotations',
        ),
        migrations.RemoveField(
            model_name='user',
            name='print_dates_details',
        ),
        migrations.RemoveField(
            model_name='user',
            name='print_export_format',
        ),
        migrations.RemoveField(
            model_name='user',
            name='print_font_face',
        ),
        migrations.RemoveField(
            model_name='user',
            name='print_font_size',
        ),
        migrations.RemoveField(
            model_name='user',
            name='print_highlights',
        ),
        migrations.RemoveField(
            model_name='user',
            name='print_links',
        ),
        migrations.RemoveField(
            model_name='user',
            name='print_paragraph_numbers',
        ),
        migrations.RemoveField(
            model_name='user',
            name='print_titles',
        ),
        migrations.RemoveField(
            model_name='user',
            name='toc_levels',
        ),
        migrations.RemoveField(
            model_name='user',
            name='tz_name',
        ),
        migrations.RemoveField(
            model_name='user',
            name='url',
        ),
        migrations.RemoveField(
            model_name='default',
            name='created_via_import',
        ),
        migrations.AlterField(
            model_name='contentcollaborator',
            name='role',
            field=models.CharField(choices=[('owner', 'owner'), ('editor', 'editor')], max_length=255),
        ),
        migrations.AlterField(
            model_name='contentcollaborator',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.RemoveField(
            model_name='default',
            name='user',
        ),
        migrations.RemoveField(
            model_name='textblock',
            name='user',
        ),
        migrations.RemoveIndex(
            model_name='role',
            name='roles_authori_fd60c5_idx',
        ),
        migrations.RemoveIndex(
            model_name='role',
            name='roles_authori_12a7ac_idx',
        ),
        migrations.RemoveField(
            model_name='role',
            name='authorizable_id',
        ),
        migrations.RemoveField(
            model_name='role',
            name='authorizable_type',
        ),
        migrations.AlterField(
            model_name='rolesuser',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Role'),
        ),
        migrations.AlterField(
            model_name='rolesuser',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.RemoveField(
            model_name='user',
            name='title',
        ),
        migrations.AlterField(
            model_name='user',
            name='email_address',
            field=models.CharField(max_length=255, unique=True),
        ),
        migrations.RenameModel(
            old_name='Default',
            new_name='Link',
        ),
        migrations.RemoveIndex(
            model_name='role',
            name='roles_name_a96913_idx',
        ),
        migrations.RemoveIndex(
            model_name='textblock',
            name='text_blocks_created_d06320_idx',
        ),
        migrations.RemoveIndex(
            model_name='textblock',
            name='text_blocks_name_ce27bd_idx',
        ),
        migrations.RemoveIndex(
            model_name='textblock',
            name='text_blocks_updated_9ac1a4_idx',
        ),
        migrations.RemoveIndex(
            model_name='user',
            name='users_affilia_021728_idx',
        ),
        migrations.RemoveIndex(
            model_name='user',
            name='users_attribu_e12b66_idx',
        ),
        migrations.RemoveIndex(
            model_name='user',
            name='users_email_a_f58eef_idx',
        ),
        migrations.RemoveIndex(
            model_name='user',
            name='users_id_6a15a7_idx',
        ),
        migrations.RemoveIndex(
            model_name='user',
            name='users_last_re_e753cf_idx',
        ),
        migrations.RemoveIndex(
            model_name='contentnode',
            name='content_nod_ancestr_752d0e_idx',
        ),
        migrations.RemoveIndex(
            model_name='contentnode',
            name='content_nod_caseboo_fd87f1_idx',
        ),
        migrations.RemoveIndex(
            model_name='contentnode',
            name='content_nod_resourc_12667a_idx',
        ),
        migrations.RemoveIndex(
            model_name='case',
            name='cases_case_co_b58acb_idx',
        ),
        migrations.RemoveIndex(
            model_name='case',
            name='cases_citatio_b60de2_gin',
        ),
        migrations.RemoveIndex(
            model_name='case',
            name='cases_created_6583ad_idx',
        ),
        migrations.RemoveIndex(
            model_name='case',
            name='cases_decisio_c6e645_idx',
        ),
        migrations.RemoveIndex(
            model_name='case',
            name='cases_name_ab_2ffab3_idx',
        ),
        migrations.RemoveIndex(
            model_name='case',
            name='cases_public_2d5cec_idx',
        ),
        migrations.RemoveIndex(
            model_name='case',
            name='cases_updated_395104_idx',
        ),
        migrations.RemoveIndex(
            model_name='contentannotation',
            name='content_ann_resourc_a9fa0e_idx',
        ),
        migrations.RemoveIndex(
            model_name='casecourt',
            name='case_courts_name_8b0202_idx',
        ),
        migrations.RemoveIndex(
            model_name='casecourt',
            name='case_courts_name_ab_48fee9_idx',
        ),
        migrations.AddIndex(
            model_name='role',
            index=models.Index(fields=['name'], name='main_role_name_452b83_idx'),
        ),
        migrations.AddIndex(
            model_name='textblock',
            index=models.Index(fields=['created_at'], name='main_textbl_created_024e46_idx'),
        ),
        migrations.AddIndex(
            model_name='textblock',
            index=models.Index(fields=['name'], name='main_textbl_name_f2ba11_idx'),
        ),
        migrations.AddIndex(
            model_name='textblock',
            index=models.Index(fields=['updated_at'], name='main_textbl_updated_f064c6_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['affiliation'], name='main_user_affilia_66dba6_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['attribution'], name='main_user_attribu_5ecf14_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email_address'], name='main_user_email_a_eb9d5b_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['id'], name='main_user_id_2f97ab_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['last_request_at'], name='main_user_last_re_6a44f6_idx'),
        ),
        migrations.AddIndex(
            model_name='contentnode',
            index=models.Index(fields=['ancestry'], name='main_conten_ancestr_30f66b_idx'),
        ),
        migrations.AddIndex(
            model_name='contentnode',
            index=models.Index(fields=['casebook', 'ordinals'], name='main_conten_caseboo_dcb214_idx'),
        ),
        migrations.AddIndex(
            model_name='contentnode',
            index=models.Index(fields=['resource_type', 'resource_id'], name='main_conten_resourc_697521_idx'),
        ),
        migrations.AddIndex(
            model_name='case',
            index=models.Index(fields=['case_court'], name='main_case_case_co_437839_idx'),
        ),
        migrations.AddIndex(
            model_name='case',
            index=django.contrib.postgres.indexes.GinIndex(fields=['citations'], name='main_case_citatio_1ccae9_gin'),
        ),
        migrations.AddIndex(
            model_name='case',
            index=models.Index(fields=['created_at'], name='main_case_created_564e30_idx'),
        ),
        migrations.AddIndex(
            model_name='case',
            index=models.Index(fields=['decision_date'], name='main_case_decisio_73ca2b_idx'),
        ),
        migrations.AddIndex(
            model_name='case',
            index=models.Index(fields=['name_abbreviation'], name='main_case_name_ab_9ce903_idx'),
        ),
        migrations.AddIndex(
            model_name='case',
            index=models.Index(fields=['public'], name='main_case_public_7032ab_idx'),
        ),
        migrations.AddIndex(
            model_name='case',
            index=models.Index(fields=['updated_at'], name='main_case_updated_8871a3_idx'),
        ),
        migrations.AddIndex(
            model_name='contentannotation',
            index=models.Index(fields=['resource', 'start_paragraph'], name='main_conten_resourc_38f18b_idx'),
        ),
        migrations.AddIndex(
            model_name='casecourt',
            index=models.Index(fields=['name'], name='main_caseco_name_cdb6f6_idx'),
        ),
        migrations.AddIndex(
            model_name='casecourt',
            index=models.Index(fields=['name_abbreviation'], name='main_caseco_name_ab_06b7cf_idx'),
        ),
        migrations.AlterModelTable(
            name='case',
            table=None,
        ),
        migrations.AlterModelTable(
            name='casecourt',
            table=None,
        ),
        migrations.AlterModelTable(
            name='contentannotation',
            table=None,
        ),
        migrations.AlterModelTable(
            name='contentcollaborator',
            table=None,
        ),
        migrations.AlterModelTable(
            name='contentnode',
            table=None,
        ),
        migrations.AlterModelTable(
            name='link',
            table=None,
        ),
        migrations.AlterModelTable(
            name='rawcontent',
            table=None,
        ),
        migrations.AlterModelTable(
            name='role',
            table=None,
        ),
        migrations.AlterModelTable(
            name='rolesuser',
            table=None,
        ),
        migrations.AlterModelTable(
            name='textblock',
            table=None,
        ),
        migrations.AlterModelTable(
            name='user',
            table=None,
        ),
        migrations.RenameField(
            model_name='user',
            old_name='verified_email',
            new_name='is_active',
        ),
        migrations.AddField(
            model_name='user',
            name='is_staff',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='user',
            name='is_superuser',
            field=models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status'),
        ),
        migrations.RemoveField(
            model_name='rolesuser',
            name='role',
        ),
        migrations.RemoveField(
            model_name='rolesuser',
            name='user',
        ),
        migrations.RemoveField(
            model_name='user',
            name='roles',
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.DeleteModel(
            name='Role',
        ),
        migrations.DeleteModel(
            name='RolesUser',
        ),
        migrations.RemoveField(
            model_name='contentnode',
            name='cloneable',
        ),
        migrations.AlterField(
            model_name='contentnode',
            name='title',
            field=models.CharField(default='Untitled', max_length=10000),
        ),
        migrations.AddField(
            model_name='contentnode',
            name='provenance',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.BigIntegerField(), default=list, size=None),
        ),
        migrations.AddField(
            model_name='contentcollaborator',
            name='can_edit',
            field=models.BooleanField(default=True),
        ),
        migrations.RemoveField(
            model_name='contentcollaborator',
            name='role',
        ),
        migrations.AlterField(
            model_name='contentcollaborator',
            name='can_edit',
            field=models.BooleanField(default=False),
        ),
        migrations.RemoveIndex(
            model_name='contentnode',
            name='main_conten_ancestr_30f66b_idx',
        ),
        migrations.RemoveField(
            model_name='contentnode',
            name='ancestry',
        ),
        migrations.RemoveField(
            model_name='contentnode',
            name='root_user',
        ),
        migrations.RemoveField(
            model_name='link',
            name='ancestry',
        ),
        migrations.AddField(
            model_name='case',
            name='court_name',
            field=models.CharField(blank=True, max_length=1024, null=True),
        ),
        migrations.RunSQL(
            sql='CREATE TABLE IF NOT EXISTS main_casecourt(oof integer DEFAULT 100)',
        ),
        migrations.RemoveIndex(
            model_name='case',
            name='main_case_case_co_437839_idx',
        ),
        migrations.RemoveField(
            model_name='case',
            name='case_court',
        ),
        migrations.DeleteModel(
            name='CaseCourt',
        ),
        migrations.CreateModel(
            name='HistoricalCase',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('name_abbreviation', models.CharField(max_length=150)),
                ('name', models.CharField(blank=True, max_length=10000, null=True)),
                ('decision_date', models.DateField(blank=True, null=True)),
                ('public', models.BooleanField(blank=True, default=False, null=True)),
                ('created_via_import', models.BooleanField(default=False)),
                ('capapi_id', models.IntegerField(blank=True, null=True)),
                ('attorneys', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('parties', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('opinions', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('citations', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('docket_number', models.CharField(blank=True, max_length=20000, null=True)),
                ('header_html', models.CharField(blank=True, max_length=15360, null=True)),
                ('content', models.CharField(max_length=5242880)),
                ('court_name', models.CharField(blank=True, max_length=1024, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical case',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.RemoveField(
            model_name='contentnode',
            name='playlist_id',
        ),
        migrations.AlterField(
            model_name='contentnode',
            name='casebook',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='contents', to='main.ContentNode'),
        ),
        migrations.AlterField(
            model_name='contentnode',
            name='collaborators',
            field=models.ManyToManyField(related_name='old_casebooks', through='main.ContentCollaborator', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Casebook',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(default='Untitled', max_length=10000)),
                ('subtitle', models.CharField(blank=True, max_length=10000, null=True)),
                ('headnote', models.TextField(blank=True, null=True)),
                ('state', models.CharField(choices=[(main.models.Casebook.LifeCycle('Fresh'), 'Fresh'), (main.models.Casebook.LifeCycle('Clone'), 'Clone'), (main.models.Casebook.LifeCycle('Draft'), 'Draft'), (main.models.Casebook.LifeCycle('Public'), 'Public'), (main.models.Casebook.LifeCycle('Archived'), 'Archived')], max_length=10)),
                ('draft', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='draft_of', to='main.Casebook')),
                ('old_casebook', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='replacement_casebook', to='main.ContentNode')),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TempCollaborator',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('has_attribution', models.BooleanField(default=False)),
                ('can_edit', models.BooleanField(default=False)),
                ('casebook', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.Casebook')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'casebook')},
            },
        ),
        migrations.AddField(
            model_name='casebook',
            name='collaborators',
            field=models.ManyToManyField(related_name='casebooks', through='main.TempCollaborator', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contentnode',
            name='new_casebook',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='contents', to='main.Casebook'),
        ),
        migrations.AddField(
            model_name='casebook',
            name='provenance',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.BigIntegerField(), default=list, size=None),
        ),
        migrations.AlterField(
            model_name='casebook',
            name='old_casebook',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='replacement_casebook', to='main.ContentNode'),
        ),
        migrations.CreateModel(
            name='HistoricalTextBlock',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=5242880, null=True)),
                ('content', models.CharField(max_length=5242880)),
                ('public', models.BooleanField(blank=True, default=True, null=True)),
                ('created_via_import', models.BooleanField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical text block',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLink',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('name', models.CharField(blank=True, max_length=1024, null=True)),
                ('description', models.CharField(blank=True, max_length=5242880, null=True)),
                ('url', models.URLField(max_length=1024)),
                ('public', models.BooleanField(default=True, null=True)),
                ('content_type', models.CharField(blank=True, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical link',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalContentNode',
            fields=[
                ('id', models.BigIntegerField(blank=True, db_index=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('ordinals', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('provenance', django.contrib.postgres.fields.ArrayField(base_field=models.BigIntegerField(), default=list, size=None)),
                ('title', models.CharField(default='Untitled', max_length=10000)),
                ('subtitle', models.CharField(blank=True, max_length=10000, null=True)),
                ('headnote', models.TextField(blank=True, null=True)),
                ('raw_headnote', models.TextField(blank=True, null=True)),
                ('public', models.BooleanField(default=False)),
                ('draft_mode_of_published_casebook', models.BooleanField(blank=True, help_text='Unknown (None) or True; never False', null=True)),
                ('resource_type', models.CharField(blank=True, max_length=255, null=True)),
                ('resource_id', models.BigIntegerField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('casebook', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='main.ContentNode')),
                ('copy_of', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='main.ContentNode')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('new_casebook', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='main.Casebook')),
            ],
            options={
                'verbose_name': 'historical content node',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AlterField(
            model_name='contentannotation',
            name='resource',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='annotations', to='main.ContentNode'),
        ),
        migrations.CreateModel(
            name='HistoricalContentAnnotation',
            fields=[
                ('id', models.BigIntegerField(blank=True, db_index=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('kind', models.CharField(choices=[('replace', 'replace'), ('highlight', 'highlight'), ('elide', 'elide'), ('note', 'note'), ('link', 'link')], max_length=255)),
                ('content', models.TextField(blank=True, null=True)),
                ('global_start_offset', models.IntegerField(blank=True, null=True)),
                ('global_end_offset', models.IntegerField(blank=True, null=True)),
                ('start_paragraph', models.IntegerField(blank=True, null=True)),
                ('end_paragraph', models.IntegerField(blank=True, null=True)),
                ('start_offset', models.IntegerField(blank=True, null=True)),
                ('end_offset', models.IntegerField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('resource', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='main.ContentNode')),
            ],
            options={
                'verbose_name': 'historical content annotation',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCasebook',
            fields=[
                ('id', models.BigIntegerField(blank=True, db_index=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('provenance', django.contrib.postgres.fields.ArrayField(base_field=models.BigIntegerField(), default=list, size=None)),
                ('title', models.CharField(default='Untitled', max_length=10000)),
                ('subtitle', models.CharField(blank=True, max_length=10000, null=True)),
                ('headnote', models.TextField(blank=True, null=True)),
                ('state', models.CharField(choices=[(main.models.Casebook.LifeCycle('Fresh'), 'Fresh'), (main.models.Casebook.LifeCycle('Clone'), 'Clone'), (main.models.Casebook.LifeCycle('Draft'), 'Draft'), (main.models.Casebook.LifeCycle('Public'), 'Public'), (main.models.Casebook.LifeCycle('Archived'), 'Archived')], max_length=10)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('draft', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='main.Casebook')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('old_casebook', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='main.ContentNode')),
            ],
            options={
                'verbose_name': 'historical casebook',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='EmailWhitelist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('university_name', models.CharField(blank=True, max_length=255, null=True)),
                ('university_url', models.URLField(max_length=1024)),
                ('email_domain', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.AlterField(
            model_name='casebook',
            name='state',
            field=models.CharField(choices=[(main.models.Casebook.LifeCycle('Fresh'), 'Fresh'), (main.models.Casebook.LifeCycle('Clone'), 'Clone'), (main.models.Casebook.LifeCycle('Draft'), 'Draft'), (main.models.Casebook.LifeCycle('Public'), 'Public'), (main.models.Casebook.LifeCycle('Archived'), 'Archived'), (main.models.Casebook.LifeCycle('Revising'), 'Revising')], max_length=10),
        ),
        migrations.AlterField(
            model_name='historicalcasebook',
            name='state',
            field=models.CharField(choices=[(main.models.Casebook.LifeCycle('Fresh'), 'Fresh'), (main.models.Casebook.LifeCycle('Clone'), 'Clone'), (main.models.Casebook.LifeCycle('Draft'), 'Draft'), (main.models.Casebook.LifeCycle('Public'), 'Public'), (main.models.Casebook.LifeCycle('Archived'), 'Archived'), (main.models.Casebook.LifeCycle('Revising'), 'Revising')], max_length=10),
        ),
        migrations.AlterField(
            model_name='contentnode',
            name='casebook',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='old_casebook_contents', to='main.ContentNode'),
        ),
        migrations.CreateModel(
            name='CommonTitle',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=300)),
                ('public_url', models.CharField(max_length=300, validators=[django.core.validators.RegexValidator(re.compile('^[-\\w]+\\Z'), "Enter a valid 'slug' consisting of Unicode letters, numbers, underscores, or hyphens.", 'invalid')])),
                ('current', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='title_name', to='main.Casebook')),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='historicalcasebook',
            name='common_title',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='main.CommonTitle'),
        ),
        migrations.AddField(
            model_name='user',
            name='public_url',
            field=models.CharField(blank=True, max_length=255, null=True, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[-\\w]+\\Z'), "Enter a valid 'slug' consisting of Unicode letters, numbers, underscores, or hyphens.", 'invalid'), main.models.validate_unused_prefix]),
        ),
        migrations.AddField(
            model_name='casebook',
            name='common_title',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='casebooks', to='main.CommonTitle'),
        ),
        migrations.AlterField(
            model_name='casebook',
            name='state',
            field=models.CharField(choices=[(main.models.Casebook.LifeCycle('Fresh'), 'Fresh'), (main.models.Casebook.LifeCycle('Clone'), 'Clone'), (main.models.Casebook.LifeCycle('Draft'), 'Draft'), (main.models.Casebook.LifeCycle('Public'), 'Public'), (main.models.Casebook.LifeCycle('Archived'), 'Archived'), (main.models.Casebook.LifeCycle('Revising'), 'Revising'), (main.models.Casebook.LifeCycle('Previous'), 'Previous')], max_length=10),
        ),
        migrations.AlterField(
            model_name='historicalcasebook',
            name='state',
            field=models.CharField(choices=[(main.models.Casebook.LifeCycle('Fresh'), 'Fresh'), (main.models.Casebook.LifeCycle('Clone'), 'Clone'), (main.models.Casebook.LifeCycle('Draft'), 'Draft'), (main.models.Casebook.LifeCycle('Public'), 'Public'), (main.models.Casebook.LifeCycle('Archived'), 'Archived'), (main.models.Casebook.LifeCycle('Revising'), 'Revising'), (main.models.Casebook.LifeCycle('Previous'), 'Previous')], max_length=10),
        ),
        migrations.AlterField(
            model_name='casebook',
            name='draft',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='draft_of', to='main.Casebook', unique=True),
        ),
        migrations.AlterField(
            model_name='casebook',
            name='draft',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='draft_of', to='main.Casebook'),
        ),
        migrations.AlterField(
            model_name='casebook',
            name='state',
            field=models.CharField(choices=[('Fresh', 'PRIVATELY_EDITING'), ('Clone', 'NEWLY_CLONED'), ('Draft', 'DRAFT'), ('Public', 'PUBLISHED'), ('Archived', 'ARCHIVED'), ('Revising', 'REVISING'), ('Previous', 'PREVIOUS_SAVE')], max_length=10),
        ),
        migrations.AlterField(
            model_name='historicalcasebook',
            name='state',
            field=models.CharField(choices=[('Fresh', 'PRIVATELY_EDITING'), ('Clone', 'NEWLY_CLONED'), ('Draft', 'DRAFT'), ('Public', 'PUBLISHED'), ('Archived', 'ARCHIVED'), ('Revising', 'REVISING'), ('Previous', 'PREVIOUS_SAVE')], max_length=10),
        ),
        migrations.AlterField(
            model_name='historicaltextblock',
            name='content',
            field=models.CharField(blank=True, max_length=5242880, null=True),
        ),
        migrations.AlterField(
            model_name='textblock',
            name='content',
            field=models.CharField(blank=True, max_length=5242880, null=True),
        ),
        migrations.AlterField(
            model_name='historicaltextblock',
            name='content',
            field=models.CharField(blank=True, default='', max_length=5242880),
        ),
        migrations.AlterField(
            model_name='textblock',
            name='content',
            field=models.CharField(blank=True, default='', max_length=5242880),
        ),
        migrations.RemoveField(
            model_name='contentnode',
            name='collaborators',
        ),
        migrations.DeleteModel(
            name='ContentCollaborator',
        ),
        migrations.RenameModel(
            old_name='TempCollaborator',
            new_name='ContentCollaborator',
        ),
        migrations.RemoveIndex(
            model_name='contentnode',
            name='main_conten_caseboo_dcb214_idx',
        ),
        migrations.RenameField(
            model_name='contentnode',
            old_name='casebook',
            new_name='old_casebook',
        ),
        migrations.RenameField(
            model_name='historicalcontentnode',
            old_name='casebook',
            new_name='old_casebook',
        ),
        migrations.AddIndex(
            model_name='contentnode',
            index=models.Index(fields=['new_casebook', 'ordinals'], name='main_conten_new_cas_966f97_idx'),
        ),
        migrations.RemoveIndex(
            model_name='contentnode',
            name='main_conten_new_cas_966f97_idx',
        ),
        migrations.RenameField(
            model_name='contentnode',
            old_name='new_casebook',
            new_name='casebook',
        ),
        migrations.RenameField(
            model_name='historicalcontentnode',
            old_name='new_casebook',
            new_name='casebook',
        ),
        migrations.AddIndex(
            model_name='contentnode',
            index=models.Index(fields=['casebook', 'ordinals'], name='main_conten_caseboo_dcb214_idx'),
        ),
    ]
