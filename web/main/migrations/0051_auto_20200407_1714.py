# Generated by Django 2.2.10 on 2020-04-07 17:14

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import main.models
import simple_history.models
from main.models import ContentNode

def deref_old_casebooks(app,schema):
    bulk_nodes = []
    old_to_new_cbs = {}
    for node in ContentNode.objects.order_by('new_casebook_id').all():
        if node.casebook_id:
            if node.casebook_id in old_to_new_cbs and node.new_casebook_id != old_to_new_cbs[node.casebook_id]:
                node.casebook = None
                bulk_nodes.append(node)
            else:
                old_to_new_cbs[node.casebook_id] = node.new_casebook_id
    ContentNode.objects.bulk_update(bulk_nodes, ['casebook_id'])


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0050_historical_contents'),
    ]

    operations = [
        migrations.AlterField(
            model_name='contentannotation',
            name='resource',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='annotations', to='main.ContentNode'),
        ),
        migrations.AlterField(
            model_name='historicalcontentannotation',
            name='resource',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='main.ContentNode'),
        ),
        migrations.CreateModel(
            name='HistoricalCasebook',
            fields=[
                ('id', models.BigIntegerField(blank=True, db_index=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('provenance', django.contrib.postgres.fields.ArrayField(base_field=models.BigIntegerField(), default=list, size=None)),
                ('title', models.CharField(default='Untitled', max_length=10000)),
                ('subtitle', models.CharField(blank=True, max_length=10000, null=True)),
                ('headnote', models.TextField(blank=True, null=True)),
                ('state', models.CharField(choices=[(main.models.Casebook.LifeCycle('Fresh'), 'Fresh'), (main.models.Casebook.LifeCycle('Clone'), 'Clone'), (main.models.Casebook.LifeCycle('Draft'), 'Draft'), (main.models.Casebook.LifeCycle('Public'), 'Public'), (main.models.Casebook.LifeCycle('Archived'), 'Archived')], max_length=10)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('draft', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='main.Casebook')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('old_casebook', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='main.ContentNode')),
            ],
            options={
                'verbose_name': 'historical casebook',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.RunPython(deref_old_casebooks, migrations.RunPython.noop),
    ]
