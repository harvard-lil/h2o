<% include Rails.application.routes.url_helpers %>

<template>
<div id="vue_annotator" v-if="mode != 'inactive'" :style="'{top: `${offset}`}'">
  <div class="annotator-inner">
    <template v-if="mode == 'create-menu'">
      <a data-annotate-action="create" data-annotation-type="highlight">Highlight</a>
      <a data-annotate-action="create" data-annotation-type="elide">Elide</a>
      <a data-annotate-action="create" data-annotation-type="replace">Replace</a>
      <a data-annotate-action="new" data-annotation-type="link">Add link</a>
      <a data-annotate-action="new" data-annotation-type="note">Add note</a>
    </template>
    <template v-else-if="mode == 'new-form'">
      <form v-if="newAnnotationtype == 'link'" class="create-form" data-annotation-type="link">
        <input name="content" type="url" placeholder="Paste URL"  />
      </form>
      <form v-if="newAnnotationtype == 'note'" class="create-form" data-annotation-type="note">
        <textarea name="content" placeholder="Note text..."></textarea>
        <input class="save-note" type="submit" value="Save" />
      </form>
    </template>
    <template v-else-if="mode == 'edit-link'">
      <form class="update-link" data-annotation-type="link">
        <input name="content" type="url" placeholder="Url to link to..." value="${(this.getLinkValue())}" />
      </form>
    </template>
    <template v-else-if="mode == 'edit-handle'">
      <a v-if="annotationType == 'highlight'" data-annotate-action="destroy">Remove highlighting</a>
      <a v-if="annotationType == 'elide'" data-annotate-action="destroy">Remove elision</a>
      <template v-if="annotationType == 'replace'">
        <a data-annotate-action="reveal">Reveal original text</a>
        <a data-annotate-action="destroy">Remove replacement text</a>
      </template>
      <template v-if="annotationType == 'link'">
        <a data-annotate-action="destroy">Remove link</a>
        <a class="edit-link" data-annotate-action="edit-link"
           data-annotation-type="link">Edit link</a>
      </template>
      <a v-if="annotationType == 'note'" data-annotate-action="destroy">Remove Note</a>
    </template>
    <template v-else-if="mode == 'save-changes'">
      <a data-annotate-action="save-changes">Save</a>
      <a data-annotate-action="cancel-changes" data-annotation-type="elide">Cancel</a>
    </template>
  </div>
</div>
</template>

<script>
export default {
  data: () => ({
    mode: "edit-handle",
    newAnnotationType: "link",
    annotationType: "link"
  }),
  computed: {
    offset: function() {
      let wrapperRect = document.querySelector('.resource-wrapper').getBoundingClientRect();
      let viewportTop = window.scrollY - (wrapperRect.top + window.scrollY);
      
      let target = this.range || this.handle;
      this.targetRect = target ? target.getBoundingClientRect() : this.targetRect || {top: 0, bottom: 0};
      
      return Math.min(Math.max(this.targetRect.top - wrapperRect.top,
                               viewportTop + 20),
                      this.targetRect.bottom - wrapperRect.top).toString(10) + "px";
    }
  }
}
</script>

<style lang="scss" scoped>
@import '../styles/vars_and_mixins';

#vue_annotator {
  @include square(0);
  @include transition(top 0.1s linear);
  display: block;
  position: absolute;
  right: 0;
  overflow: visible;
  user-select: none;
}

.hide .annotator-inner {
  max-width: 0px;
  padding: 10px 0;
  border-width: 1px 0;
}

a {
  @include sans-serif($regular, 12px, 14px);
  cursor: pointer;
  white-space: nowrap;
  background-color: $white;
  &:hover {
    background-color: $highlight;
  }
}

.annotator-inner {
  @include transition(max-width 0.1s linear, padding 0.1s linear, border-width 0.1s linear);
  position: absolute;
  left: 40px;
  padding: 10px;
  max-width: 200px;
  overflow: hidden;
  background-color: $white;
  border: 1px solid black;
  z-index: 2;
  margin-left: 20px;
}

.create-form {
  display: flex;
  flex-direction: column;
  
  .save-note {
    margin-top: 20px;
  }
}
</style>
